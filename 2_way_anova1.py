# -*- coding: utf-8 -*-
"""2-way anova1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G5e3CgE5zaBigrqL3d-8aPm5twEzmnDD
"""

import pandas as pd
import numpy as np
import statsmodels.api as sm
from statsmodels.formula.api import ols

# Simulate 200 participants (50 per group)
np.random.seed(42)

means = {
    ("Formal", "Academic"): 4.5,
    ("Formal", "Fun"): 5.2,
    ("Friendly", "Academic"): 5.0,
    ("Friendly", "Fun"): 5.8
}

simulated_data = []

for greeting in ["Formal", "Friendly"]:
    for framing in ["Academic", "Fun"]:
        for _ in range(50):
            correct = np.clip(np.random.normal(loc=means[(greeting, framing)], scale=1.2), 0, 15).round().astype(int)
            duration = np.random.normal(loc=60, scale=12)
            simulated_data.append({
                "greeting": greeting,
                "framing": framing,
                "correct_count": correct,
                "duration_sec": duration
            })

df = pd.DataFrame(simulated_data)

# Run 2-way ANOVA on correct_count
model = ols('correct_count ~ C(greeting) * C(framing)', data=df).fit()
anova_table = sm.stats.anova_lm(model, typ=2)
print(anova_table)

import matplotlib.pyplot as plt
import seaborn as sns

# Run 2-way ANOVA on duration_sec
model_duration = ols('duration_sec ~ C(greeting) * C(framing)', data=df).fit()
anova_duration = sm.stats.anova_lm(model_duration, typ=2)

# Interaction plot for correct_count
plt.figure(figsize=(8, 5))
sns.pointplot(data=df, x="framing", y="correct_count", hue="greeting", ci=95, dodge=True)
plt.title("Interaction Plot: Correct Count by Greeting and Framing")
plt.ylabel("Mean Correct Count (out of 15)")
plt.xlabel("Task Framing")
plt.tight_layout()
plt.grid(True)
plt.show()

# Boxplot for duration_sec
plt.figure(figsize=(8, 5))
sns.boxplot(data=df, x="framing", y="duration_sec", hue="greeting")
plt.title("Boxplot: Completion Time by Greeting and Framing")
plt.ylabel("Duration (seconds)")
plt.xlabel("Task Framing")
plt.tight_layout()
plt.grid(True)
plt.show()

anova_duration